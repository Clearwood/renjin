/*
 * Renjin : JVM-based interpreter for the R language for the statistical analysis
 * Copyright Â© 2010-${$file.lastModified.year} BeDataDriven Groep B.V. and contributors
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, a copy is available at
 *  https://www.gnu.org/licenses/gpl-2.0.txt
 *
 */


configurations {
    gcc
    compile
}

dependencies {
    gcc project(':tools:gcc-bridge:compiler')
    gcc libraries.soot

    compile project(':tools:gcc-bridge:runtime')
    compile project(':math:common')
}

def compiledOutputDir = "$buildDir/gcc-bridge/classes"
def optimizedOutputDir = "$buildDir/gcc-bridge/optimized"

sourceSets {
    main {
        output.dir(compiledOutputDir, builtBy: 'compile')
    }
}

task compile(type: JavaExec, dependsOn: ':tools:gcc-bridge:compiler:compilePlugin') {


    if(project.file('src/main/c').exists()) {
        inputs.dir 'src/main/c'
    }
    if(project.file('src/main/fortran').exists()) {
        inputs.dir 'src/main/fortran'
    }
    outputs.dir compiledOutputDir

    environment 'GCC_BRIDGE_PLUGIN', gccBridgePlugin
    
    classpath configurations.gcc
    classpath sourceSets.main.compileClasspath

    main = 'org.renjin.gcc.Build'

}

task optimize(type: JavaExec) {

    dependsOn 'compile'

    inputs.dir compiledOutputDir
    outputs.dir optimizedOutputDir

    doFirst {

        classpath configurations.gcc
        main = 'soot.Main'

        // Prepend maven's classpath
        args '-pp'

        // Classpath for soot analysis
        args '-cp'
        args configurations.compile + ":" + compiledOutputDir

        args '-asm-backend'
        args '-java-version'
        args '1.8';

//    args("-v");
        args '-debug'

        // Add classes to optimize
        args '-O'

        // Write out to build directory and overwrite existing classfiles
        args '-d"'
        args optimizedOutputDir
    }
}
